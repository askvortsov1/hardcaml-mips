open Hardcaml
open Hardcaml_waveterm

let clock = Signal.input "clock" 1

let waves run =
  let read_enable = Signal.input "read_enable" 1 in
  let valid = Signal.input "valid" 1 in
  let value = Signal.input "value" 8 in
  let rx, rx_busy =
    Mips.Uart.Rx_buffer.create ~read_enable ~clock { valid; value }
  in
  let uart_rx_value = Signal.output "uart_rx_value" rx.value in
  let uart_rx_valid = Signal.output "uart_rx_valid" rx.valid in
  let uart_rx_busy = Signal.output "uart_rx_busy" rx_busy in
  let circuit =
    Circuit.create_exn ~name:"rx_state_machine"
      [ uart_rx_value; uart_rx_valid; uart_rx_busy ]
  in
  let waves, sim =
    Hardcaml_waveterm.Waveform.create
      (Cyclesim.create ~config:Cyclesim.Config.trace_all circuit)
  in

  run sim;

  waves

let read_enable_on_waves =
  waves (fun sim ->
      Cyclesim.in_port sim "read_enable" := Bits.gnd;
      Cyclesim.cycle sim;
      Cyclesim.in_port sim "read_enable" := Bits.vdd;
      Cyclesim.cycle sim;

      Cyclesim.in_port sim "valid" := Bits.vdd;
      Cyclesim.in_port sim "value" := Bits.of_string "8'h61" (* "a" *);
      for _ = 0 to Mips.Uart.cycles_per_packet do
        Cyclesim.cycle sim;
        Cyclesim.in_port sim "valid" := Bits.gnd
      done;

      Cyclesim.in_port sim "valid" := Bits.vdd;
      Cyclesim.in_port sim "value" := Bits.of_string "8'h72" (* "r" *);
      for _ = 0 to Mips.Uart.cycles_per_packet do
        Cyclesim.cycle sim;
        Cyclesim.in_port sim "valid" := Bits.gnd
      done;

      Cyclesim.in_port sim "valid" := Bits.vdd;
      Cyclesim.in_port sim "value" := Bits.of_string "8'h74" (* "t" *);
      for _ = 0 to Mips.Uart.cycles_per_packet do
        Cyclesim.cycle sim;
        Cyclesim.in_port sim "valid" := Bits.gnd
      done;

      Cyclesim.in_port sim "valid" := Bits.vdd;
      Cyclesim.in_port sim "value" := Bits.of_string "8'h79" (* "y" *);
      for _ = 0 to Mips.Uart.cycles_per_packet do
        Cyclesim.cycle sim;
        Cyclesim.in_port sim "valid" := Bits.gnd
      done;

      (* This should override in the buffer but not get outputted as valid. *)
      Cyclesim.in_port sim "valid" := Bits.vdd;
      Cyclesim.in_port sim "value" := Bits.of_string "8'h63" (* "c" *);
      for _ = 0 to Mips.Uart.cycles_per_packet do
        Cyclesim.cycle sim;
        Cyclesim.in_port sim "valid" := Bits.gnd
      done;

      Cyclesim.in_port sim "valid" := Bits.vdd;
      Cyclesim.in_port sim "value" := Bits.of_string "8'h61" (* "a" *);
      for _ = 0 to Mips.Uart.cycles_per_packet do
        Cyclesim.cycle sim;
        Cyclesim.in_port sim "valid" := Bits.gnd
      done;

      Cyclesim.in_port sim "valid" := Bits.vdd;
      Cyclesim.in_port sim "value" := Bits.of_string "8'h6D" (* "m" *);
      for _ = 0 to Mips.Uart.cycles_per_packet do
        Cyclesim.cycle sim;
        Cyclesim.in_port sim "valid" := Bits.gnd
      done;

      Cyclesim.in_port sim "valid" := Bits.vdd;
      Cyclesim.in_port sim "value" := Bits.of_string "8'h6C" (* "l" *);
      Cyclesim.in_port sim "read_enable" := Bits.gnd;
      for _ = 0 to Mips.Uart.cycles_per_packet do
        Cyclesim.cycle sim;
        Cyclesim.in_port sim "valid" := Bits.gnd
      done;

      Cyclesim.in_port sim "value" := Bits.of_string "8'h7A" (* "z" *);
      for _ = 0 to Mips.Uart.cycles_per_packet do
        Cyclesim.cycle sim
      done)

let%expect_test "rx_first_byte" =
  Waveform.print ~display_width:100 ~display_height:18 read_enable_on_waves;
  [%expect
    {|
    ┌Signals───────────┐┌Waves─────────────────────────────────────────────────────────────────────────┐
    │clock             ││┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐ │
    │                  ││    └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └─│
    │read_enable       ││        ┌─────────────────────────────────────────────────────────────────────│
    │                  ││────────┘                                                                     │
    │valid             ││                ┌───────┐                                                     │
    │                  ││────────────────┘       └─────────────────────────────────────────────────────│
    │                  ││────────────────┬─────────────────────────────────────────────────────────────│
    │value             ││ 00             │61                                                           │
    │                  ││────────────────┴─────────────────────────────────────────────────────────────│
    │uart_rx_busy      ││        ┌─────────────────────────────────────────────────────────────────────│
    │                  ││────────┘                                                                     │
    │uart_rx_valid     ││                                                                              │
    │                  ││──────────────────────────────────────────────────────────────────────────────│
    │                  ││────────────────────────┬─────────────────────────────────────────────────────│
    │uart_rx_value     ││ 00000000               │61000000                                             │
    │                  ││────────────────────────┴─────────────────────────────────────────────────────│
    └──────────────────┘└──────────────────────────────────────────────────────────────────────────────┘ |}]

let%expect_test "rx_second_byte" =
  Waveform.print ~start_cycle:Mips.Uart.cycles_per_packet ~display_width:100
    ~display_height:18 read_enable_on_waves;
  [%expect
    {|
    ┌Signals───────────┐┌Waves─────────────────────────────────────────────────────────────────────────┐
    │clock             ││┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐ │
    │                  ││    └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └─│
    │read_enable       ││──────────────────────────────────────────────────────────────────────────────│
    │                  ││                                                                              │
    │valid             ││                        ┌───────┐                                             │
    │                  ││────────────────────────┘       └─────────────────────────────────────────────│
    │                  ││────────────────────────┬─────────────────────────────────────────────────────│
    │value             ││ 61                     │72                                                   │
    │                  ││────────────────────────┴─────────────────────────────────────────────────────│
    │uart_rx_busy      ││──────────────────────────────────────────────────────────────────────────────│
    │                  ││                                                                              │
    │uart_rx_valid     ││                                                                              │
    │                  ││──────────────────────────────────────────────────────────────────────────────│
    │                  ││────────────────────────────────┬─────────────────────────────────────────────│
    │uart_rx_value     ││ 61000000                       │61720000                                     │
    │                  ││────────────────────────────────┴─────────────────────────────────────────────│
    └──────────────────┘└──────────────────────────────────────────────────────────────────────────────┘ |}]

let%expect_test "rx_third_byte" =
  Waveform.print
    ~start_cycle:(Mips.Uart.cycles_per_packet * 2)
    ~display_width:100 ~display_height:18 read_enable_on_waves;
  [%expect
    {|
  ┌Signals───────────┐┌Waves─────────────────────────────────────────────────────────────────────────┐
  │clock             ││┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐ │
  │                  ││    └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └─│
  │read_enable       ││──────────────────────────────────────────────────────────────────────────────│
  │                  ││                                                                              │
  │valid             ││                                ┌───────┐                                     │
  │                  ││────────────────────────────────┘       └─────────────────────────────────────│
  │                  ││────────────────────────────────┬─────────────────────────────────────────────│
  │value             ││ 72                             │74                                           │
  │                  ││────────────────────────────────┴─────────────────────────────────────────────│
  │uart_rx_busy      ││──────────────────────────────────────────────────────────────────────────────│
  │                  ││                                                                              │
  │uart_rx_valid     ││                                                                              │
  │                  ││──────────────────────────────────────────────────────────────────────────────│
  │                  ││────────────────────────────────────────┬─────────────────────────────────────│
  │uart_rx_value     ││ 61720000                               │61727400                             │
  │                  ││────────────────────────────────────────┴─────────────────────────────────────│
  └──────────────────┘└──────────────────────────────────────────────────────────────────────────────┘ |}]

let%expect_test "rx_fourth_byte" =
  Waveform.print
    ~start_cycle:(Mips.Uart.cycles_per_packet * 3)
    ~display_width:100 ~display_height:18 read_enable_on_waves;
  [%expect
    {|
  ┌Signals───────────┐┌Waves─────────────────────────────────────────────────────────────────────────┐
  │clock             ││┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐ │
  │                  ││    └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └─│
  │read_enable       ││──────────────────────────────────────────────────────────────────────────────│
  │                  ││                                                                              │
  │valid             ││                                        ┌───────┐                             │
  │                  ││────────────────────────────────────────┘       └─────────────────────────────│
  │                  ││────────────────────────────────────────┬─────────────────────────────────────│
  │value             ││ 74                                     │79                                   │
  │                  ││────────────────────────────────────────┴─────────────────────────────────────│
  │uart_rx_busy      ││────────────────────────────────────────────────┐       ┌─────────────────────│
  │                  ││                                                └───────┘                     │
  │uart_rx_valid     ││                                                ┌───────┐                     │
  │                  ││────────────────────────────────────────────────┘       └─────────────────────│
  │                  ││────────────────────────────────────────────────┬─────────────────────────────│
  │uart_rx_value     ││ 61727400                                       │61727479                     │
  │                  ││────────────────────────────────────────────────┴─────────────────────────────│
  └──────────────────┘└──────────────────────────────────────────────────────────────────────────────┘ |}]

let%expect_test "rx_fifth_byte (starts reading again, should not output valid)"
    =
  Waveform.print
    ~start_cycle:(Mips.Uart.cycles_per_packet * 4)
    ~display_width:100 ~display_height:18 read_enable_on_waves;
  [%expect
    {|
  ┌Signals───────────┐┌Waves─────────────────────────────────────────────────────────────────────────┐
  │clock             ││┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐ │
  │                  ││    └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └─│
  │read_enable       ││──────────────────────────────────────────────────────────────────────────────│
  │                  ││                                                                              │
  │valid             ││                                                ┌───────┐                     │
  │                  ││────────────────────────────────────────────────┘       └─────────────────────│
  │                  ││────────────────────────────────────────────────┬─────────────────────────────│
  │value             ││ 79                                             │63                           │
  │                  ││────────────────────────────────────────────────┴─────────────────────────────│
  │uart_rx_busy      ││──────────────────────────────────────────────────────────────────────────────│
  │                  ││                                                                              │
  │uart_rx_valid     ││                                                                              │
  │                  ││──────────────────────────────────────────────────────────────────────────────│
  │                  ││────────────────────────────────────────────────────────┬─────────────────────│
  │uart_rx_value     ││ 61727479                                               │63000000             │
  │                  ││────────────────────────────────────────────────────────┴─────────────────────│
  └──────────────────┘└──────────────────────────────────────────────────────────────────────────────┘ |}]

let%expect_test "rx_eigth_byte (can output the next word)" =
  Waveform.print
    ~start_cycle:((Mips.Uart.cycles_per_packet * 7) + 5)
    ~display_width:100 ~display_height:18 read_enable_on_waves;
  [%expect
    {|
┌Signals───────────┐┌Waves─────────────────────────────────────────────────────────────────────────┐
│clock             ││┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐ │
│                  ││    └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └─│
│read_enable       ││────────────────────────────────┐                                             │
│                  ││                                └─────────────────────────────────────────────│
│valid             ││                                ┌───────┐                                     │
│                  ││────────────────────────────────┘       └─────────────────────────────────────│
│                  ││────────────────────────────────┬─────────────────────────────────────────────│
│value             ││ 6D                             │6C                                           │
│                  ││────────────────────────────────┴─────────────────────────────────────────────│
│uart_rx_busy      ││────────────────────────────────────────┐                                     │
│                  ││                                        └─────────────────────────────────────│
│uart_rx_valid     ││                                        ┌───────┐                             │
│                  ││────────────────────────────────────────┘       └─────────────────────────────│
│                  ││────────────────────────────────────────┬─────────────────────────────────────│
│uart_rx_value     ││ 63616D00                               │63616D6C                             │
│                  ││────────────────────────────────────────┴─────────────────────────────────────│
└──────────────────┘└──────────────────────────────────────────────────────────────────────────────┘ |}]

let%expect_test "rx_ninth_byte (will stop being busy" =
  Waveform.print
    ~start_cycle:(Mips.Uart.cycles_per_packet * 8)
    ~display_width:100 ~display_height:18 read_enable_on_waves;
  [%expect
    {|
  ┌Signals───────────┐┌Waves─────────────────────────────────────────────────────────────────────────┐
  │clock             ││┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐ │
  │                  ││    └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └─│
  │read_enable       ││                                                                              │
  │                  ││──────────────────────────────────────────────────────────────────────────────│
  │valid             ││                                                                              │
  │                  ││──────────────────────────────────────────────────────────────────────────────│
  │                  ││──────────────────────────────────────────────────────────────────────────────│
  │value             ││ 6C                                                                           │
  │                  ││──────────────────────────────────────────────────────────────────────────────│
  │uart_rx_busy      ││                                                                              │
  │                  ││──────────────────────────────────────────────────────────────────────────────│
  │uart_rx_valid     ││                                                                              │
  │                  ││──────────────────────────────────────────────────────────────────────────────│
  │                  ││──────────────────────────────────────────────────────────────────────────────│
  │uart_rx_value     ││ 63616D6C                                                                     │
  │                  ││──────────────────────────────────────────────────────────────────────────────│
  └──────────────────┘└──────────────────────────────────────────────────────────────────────────────┘ |}]

let read_enable_off_waves =
  waves (fun sim ->
      Cyclesim.in_port sim "read_enable" := Bits.gnd;
      Cyclesim.cycle sim;
      Cyclesim.cycle sim;

      Cyclesim.in_port sim "valid" := Bits.vdd;
      Cyclesim.in_port sim "value" := Bits.of_string "8'h61" (* "a" *);
      for _ = 0 to Mips.Uart.cycles_per_packet do
        Cyclesim.cycle sim;
        Cyclesim.in_port sim "valid" := Bits.gnd
      done)

let%expect_test "read enable off: rx shouldn't pull into buffer" =
  Waveform.print ~display_width:100 ~display_height:18 read_enable_off_waves;
  [%expect
    {|
    ┌Signals───────────┐┌Waves─────────────────────────────────────────────────────────────────────────┐
    │clock             ││┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐ │
    │                  ││    └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └─│
    │read_enable       ││                                                                              │
    │                  ││──────────────────────────────────────────────────────────────────────────────│
    │valid             ││                ┌───────┐                                                     │
    │                  ││────────────────┘       └─────────────────────────────────────────────────────│
    │                  ││────────────────┬─────────────────────────────────────────────────────────────│
    │value             ││ 00             │61                                                           │
    │                  ││────────────────┴─────────────────────────────────────────────────────────────│
    │uart_rx_busy      ││                                                                              │
    │                  ││──────────────────────────────────────────────────────────────────────────────│
    │uart_rx_valid     ││                                                                              │
    │                  ││──────────────────────────────────────────────────────────────────────────────│
    │                  ││──────────────────────────────────────────────────────────────────────────────│
    │uart_rx_value     ││ 00000000                                                                     │
    │                  ││──────────────────────────────────────────────────────────────────────────────│
    └──────────────────┘└──────────────────────────────────────────────────────────────────────────────┘ |}]

let read_terminate_early =
  waves (fun sim ->
      Cyclesim.in_port sim "read_enable" := Bits.gnd;
      Cyclesim.cycle sim;
      Cyclesim.in_port sim "read_enable" := Bits.vdd;
      Cyclesim.cycle sim;

      Cyclesim.in_port sim "valid" := Bits.vdd;
      Cyclesim.in_port sim "value" := Bits.of_string "8'h61" (* "a" *);
      for _ = 0 to Mips.Uart.cycles_per_packet do
        Cyclesim.cycle sim;
        Cyclesim.in_port sim "valid" := Bits.gnd
      done;

      Cyclesim.in_port sim "valid" := Bits.vdd;
      Cyclesim.in_port sim "value" := Bits.of_string "8'h72" (* "r" *);
      for _ = 0 to Mips.Uart.cycles_per_packet do
        Cyclesim.cycle sim;
        Cyclesim.in_port sim "valid" := Bits.gnd
      done;

      Cyclesim.in_port sim "valid" := Bits.vdd;
      Cyclesim.in_port sim "value" := Bits.of_string "8'h0A" (* "\n" *);
      for _ = 0 to Mips.Uart.cycles_per_packet do
        Cyclesim.cycle sim;
        Cyclesim.in_port sim "valid" := Bits.gnd
      done;

      (* Reads in a one-byte word, then stops *)
      Cyclesim.in_port sim "valid" := Bits.vdd;
      Cyclesim.in_port sim "value" := Bits.of_string "8'h0A" (* "\n" *);
      Cyclesim.cycle sim;
      Cyclesim.in_port sim "valid" := Bits.gnd;
      Cyclesim.in_port sim "read_enable" := Bits.gnd;
      for _ = 0 to Mips.Uart.cycles_per_packet do
        Cyclesim.cycle sim;
        Cyclesim.in_port sim "valid" := Bits.gnd
      done)

let%expect_test "rx_first_byte (ends early)" =
  Waveform.print ~display_width:100 ~display_height:18 read_terminate_early;
  [%expect
    {|
  ┌Signals───────────┐┌Waves─────────────────────────────────────────────────────────────────────────┐
  │clock             ││┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐ │
  │                  ││    └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └─│
  │read_enable       ││        ┌─────────────────────────────────────────────────────────────────────│
  │                  ││────────┘                                                                     │
  │valid             ││                ┌───────┐                                                     │
  │                  ││────────────────┘       └─────────────────────────────────────────────────────│
  │                  ││────────────────┬─────────────────────────────────────────────────────────────│
  │value             ││ 00             │61                                                           │
  │                  ││────────────────┴─────────────────────────────────────────────────────────────│
  │uart_rx_busy      ││        ┌─────────────────────────────────────────────────────────────────────│
  │                  ││────────┘                                                                     │
  │uart_rx_valid     ││                                                                              │
  │                  ││──────────────────────────────────────────────────────────────────────────────│
  │                  ││────────────────────────┬─────────────────────────────────────────────────────│
  │uart_rx_value     ││ 00000000               │61000000                                             │
  │                  ││────────────────────────┴─────────────────────────────────────────────────────│
  └──────────────────┘└──────────────────────────────────────────────────────────────────────────────┘ |}]

let%expect_test "rx_second_byte (ends early)" =
  Waveform.print ~start_cycle:Mips.Uart.cycles_per_packet ~display_width:100
    ~display_height:18 read_terminate_early;
  [%expect
    {|
  ┌Signals───────────┐┌Waves─────────────────────────────────────────────────────────────────────────┐
  │clock             ││┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐ │
  │                  ││    └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └─│
  │read_enable       ││──────────────────────────────────────────────────────────────────────────────│
  │                  ││                                                                              │
  │valid             ││                        ┌───────┐                                             │
  │                  ││────────────────────────┘       └─────────────────────────────────────────────│
  │                  ││────────────────────────┬─────────────────────────────────────────────────────│
  │value             ││ 61                     │72                                                   │
  │                  ││────────────────────────┴─────────────────────────────────────────────────────│
  │uart_rx_busy      ││──────────────────────────────────────────────────────────────────────────────│
  │                  ││                                                                              │
  │uart_rx_valid     ││                                                                              │
  │                  ││──────────────────────────────────────────────────────────────────────────────│
  │                  ││────────────────────────────────┬─────────────────────────────────────────────│
  │uart_rx_value     ││ 61000000                       │61720000                                     │
  │                  ││────────────────────────────────┴─────────────────────────────────────────────│
  └──────────────────┘└──────────────────────────────────────────────────────────────────────────────┘ |}]

let%expect_test "rx_third_byte (ends early)" =
  Waveform.print
    ~start_cycle:(Mips.Uart.cycles_per_packet * 2)
    ~display_width:100 ~display_height:18 read_terminate_early;
  [%expect
    {|
┌Signals───────────┐┌Waves─────────────────────────────────────────────────────────────────────────┐
│clock             ││┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐ │
│                  ││    └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └─│
│read_enable       ││──────────────────────────────────────────────────────────────────────────────│
│                  ││                                                                              │
│valid             ││                                ┌───────┐                                     │
│                  ││────────────────────────────────┘       └─────────────────────────────────────│
│                  ││────────────────────────────────┬─────────────────────────────────────────────│
│value             ││ 72                             │0A                                           │
│                  ││────────────────────────────────┴─────────────────────────────────────────────│
│uart_rx_busy      ││────────────────────────────────────────┐       ┌─────────────────────────────│
│                  ││                                        └───────┘                             │
│uart_rx_valid     ││                                        ┌───────┐                             │
│                  ││────────────────────────────────────────┘       └─────────────────────────────│
│                  ││────────────────────────────────────────┬─────────────────────────────────────│
│uart_rx_value     ││ 61720000                               │61720A00                             │
│                  ││────────────────────────────────────────┴─────────────────────────────────────│
└──────────────────┘└──────────────────────────────────────────────────────────────────────────────┘ |}]

let%expect_test "rx_fourth_byte (ends early)" =
  Waveform.print
    ~start_cycle:(Mips.Uart.cycles_per_packet * 3)
    ~display_width:100 ~display_height:18 read_terminate_early;
  [%expect
    {|
┌Signals───────────┐┌Waves─────────────────────────────────────────────────────────────────────────┐
│clock             ││┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐ │
│                  ││    └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └─│
│read_enable       ││────────────────────────────────────────────────┐                             │
│                  ││                                                └─────────────────────────────│
│valid             ││                                        ┌───────┐                             │
│                  ││────────────────────────────────────────┘       └─────────────────────────────│
│                  ││──────────────────────────────────────────────────────────────────────────────│
│value             ││ 0A                                                                           │
│                  ││──────────────────────────────────────────────────────────────────────────────│
│uart_rx_busy      ││────────────────────────────────────────────────┐                             │
│                  ││                                                └─────────────────────────────│
│uart_rx_valid     ││                                                ┌───────┐                     │
│                  ││────────────────────────────────────────────────┘       └─────────────────────│
│                  ││────────────────────────────────────────────────┬─────────────────────────────│
│uart_rx_value     ││ 61720A00                                       │0A000000                     │
│                  ││────────────────────────────────────────────────┴─────────────────────────────│
└──────────────────┘└──────────────────────────────────────────────────────────────────────────────┘ |}]


let read_byte_by_byte =
  waves (fun sim ->
      Cyclesim.in_port sim "read_enable" := Bits.gnd;
      Cyclesim.cycle sim;
      Cyclesim.in_port sim "read_enable" := Bits.vdd;
      Cyclesim.cycle sim;

      Cyclesim.in_port sim "valid" := Bits.vdd;
      Cyclesim.in_port sim "value" := Bits.of_string "8'h61" (* "a" *);
      for _ = 0 to Mips.Uart.cycles_per_packet do
        Cyclesim.cycle sim;
        Cyclesim.in_port sim "valid" := Bits.gnd
      done;

      Cyclesim.in_port sim "valid" := Bits.vdd;
      Cyclesim.in_port sim "value" := Bits.of_string "8'h0A" (* "\n" *);
      for _ = 0 to Mips.Uart.cycles_per_packet do
        Cyclesim.cycle sim;
        Cyclesim.in_port sim "valid" := Bits.gnd
      done;

      Cyclesim.in_port sim "valid" := Bits.vdd;
      Cyclesim.in_port sim "value" := Bits.of_string "8'h62" (* "b" *);
      for _ = 0 to Mips.Uart.cycles_per_packet do
        Cyclesim.cycle sim;
        Cyclesim.in_port sim "valid" := Bits.gnd
      done;

      Cyclesim.in_port sim "valid" := Bits.vdd;
      Cyclesim.in_port sim "value" := Bits.of_string "8'h0A" (* "\n" *);
      for _ = 0 to Mips.Uart.cycles_per_packet do
        Cyclesim.cycle sim;
        Cyclesim.in_port sim "valid" := Bits.gnd
      done;
)


let%expect_test "rx_first_byte (byte by byte)" =
  Waveform.print ~display_width:100 ~display_height:18 read_byte_by_byte;
  [%expect
    {|
  ┌Signals───────────┐┌Waves─────────────────────────────────────────────────────────────────────────┐
  │clock             ││┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐ │
  │                  ││    └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └─│
  │read_enable       ││        ┌─────────────────────────────────────────────────────────────────────│
  │                  ││────────┘                                                                     │
  │valid             ││                ┌───────┐                                                     │
  │                  ││────────────────┘       └─────────────────────────────────────────────────────│
  │                  ││────────────────┬─────────────────────────────────────────────────────────────│
  │value             ││ 00             │61                                                           │
  │                  ││────────────────┴─────────────────────────────────────────────────────────────│
  │uart_rx_busy      ││        ┌─────────────────────────────────────────────────────────────────────│
  │                  ││────────┘                                                                     │
  │uart_rx_valid     ││                                                                              │
  │                  ││──────────────────────────────────────────────────────────────────────────────│
  │                  ││────────────────────────┬─────────────────────────────────────────────────────│
  │uart_rx_value     ││ 00000000               │61000000                                             │
  │                  ││────────────────────────┴─────────────────────────────────────────────────────│
  └──────────────────┘└──────────────────────────────────────────────────────────────────────────────┘ |}]

let%expect_test "rx_second_byte (byte by byte)" =
  Waveform.print ~start_cycle:Mips.Uart.cycles_per_packet ~display_width:100
    ~display_height:18 read_byte_by_byte;
  [%expect
    {|
  ┌Signals───────────┐┌Waves─────────────────────────────────────────────────────────────────────────┐
  │clock             ││┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐ │
  │                  ││    └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └─│
  │read_enable       ││──────────────────────────────────────────────────────────────────────────────│
  │                  ││                                                                              │
  │valid             ││                        ┌───────┐                                             │
  │                  ││────────────────────────┘       └─────────────────────────────────────────────│
  │                  ││────────────────────────┬─────────────────────────────────────────────────────│
  │value             ││ 61                     │0A                                                   │
  │                  ││────────────────────────┴─────────────────────────────────────────────────────│
  │uart_rx_busy      ││────────────────────────────────┐       ┌─────────────────────────────────────│
  │                  ││                                └───────┘                                     │
  │uart_rx_valid     ││                                ┌───────┐                                     │
  │                  ││────────────────────────────────┘       └─────────────────────────────────────│
  │                  ││────────────────────────────────┬─────────────────────────────────────────────│
  │uart_rx_value     ││ 61000000                       │610A0000                                     │
  │                  ││────────────────────────────────┴─────────────────────────────────────────────│
  └──────────────────┘└──────────────────────────────────────────────────────────────────────────────┘ |}]

let%expect_test "rx_third_byte (byte by byte)" =
  Waveform.print
    ~start_cycle:(Mips.Uart.cycles_per_packet * 2)
    ~display_width:100 ~display_height:18 read_byte_by_byte;
  [%expect
    {|
┌Signals───────────┐┌Waves─────────────────────────────────────────────────────────────────────────┐
│clock             ││┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐ │
│                  ││    └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └─│
│read_enable       ││──────────────────────────────────────────────────────────────────────────────│
│                  ││                                                                              │
│valid             ││                                ┌───────┐                                     │
│                  ││────────────────────────────────┘       └─────────────────────────────────────│
│                  ││────────────────────────────────┬─────────────────────────────────────────────│
│value             ││ 0A                             │62                                           │
│                  ││────────────────────────────────┴─────────────────────────────────────────────│
│uart_rx_busy      ││──────────────────────────────────────────────────────────────────────────────│
│                  ││                                                                              │
│uart_rx_valid     ││                                                                              │
│                  ││──────────────────────────────────────────────────────────────────────────────│
│                  ││────────────────────────────────────────┬─────────────────────────────────────│
│uart_rx_value     ││ 610A0000                               │62000000                             │
│                  ││────────────────────────────────────────┴─────────────────────────────────────│
└──────────────────┘└──────────────────────────────────────────────────────────────────────────────┘ |}]

let%expect_test "rx_fourth_byte (byte by byte)" =
  Waveform.print
    ~start_cycle:(Mips.Uart.cycles_per_packet * 3)
    ~display_width:100 ~display_height:18 read_byte_by_byte;
  [%expect
    {|
┌Signals───────────┐┌Waves─────────────────────────────────────────────────────────────────────────┐
│clock             ││┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐   ┌───┐ │
│                  ││    └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └───┘   └─│
│read_enable       ││──────────────────────────────────────────────────────────────────────────────│
│                  ││                                                                              │
│valid             ││                                        ┌───────┐                             │
│                  ││────────────────────────────────────────┘       └─────────────────────────────│
│                  ││────────────────────────────────────────┬─────────────────────────────────────│
│value             ││ 62                                     │0A                                   │
│                  ││────────────────────────────────────────┴─────────────────────────────────────│
│uart_rx_busy      ││────────────────────────────────────────────────┐       ┌─────────────────────│
│                  ││                                                └───────┘                     │
│uart_rx_valid     ││                                                ┌───────┐                     │
│                  ││────────────────────────────────────────────────┘       └─────────────────────│
│                  ││────────────────────────────────────────────────┬─────────────────────────────│
│uart_rx_value     ││ 62000000                                       │620A0000                     │
│                  ││────────────────────────────────────────────────┴─────────────────────────────│
└──────────────────┘└──────────────────────────────────────────────────────────────────────────────┘ |}]
